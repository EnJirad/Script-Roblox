local OrionLib = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Orion/main/source'))()

local Players = game.Players
local Player = Players.LocalPlayer
local Character = Player.Character

local Speed = 60
local InfJump = false
local AntiAFK = false
local CollectMedkits = true
local AutoMobs = false
local BuyitemCK = false
local BuyitemDD = false
local BuyitemFF = false

local function SetSpeed()
    if Speed then
        Player.Character.Humanoid.WalkSpeed = Speed
    end
end

local function ToggleInfJump(value)
    InfJump = value
end

local function onJumpRequest()
    if InfJump then
        Player.Character:FindFirstChildOfClass("Humanoid"):ChangeState("Jumping")
    end
end

local function ToggleAntiAFK(value)
    AntiAFK = value
    if AntiAFK then
        wait(3)
        local VirtualUser = game:service('VirtualUser')
        game:service('Players').LocalPlayer.Idled:Connect(function()
            VirtualUser:CaptureController()
            VirtualUser:ClickButton2(Vector2.new())
        end)
    end
end

local function ToggleCollectMedkits(value)
    CollectMedkits = value
    while CollectMedkits do
        local humanoid = Player.Character:FindFirstChild("Humanoid")
        if humanoid and humanoid.Health < humanoid.MaxHealth * 0.95 then
            local Medkit = workspace.Ignore:GetChildren()
            for i, Medkit in ipairs(Medkit) do
                if Medkit:IsA("MeshPart") and Medkit.Name == "Medkit" then
                    Medkit.CFrame = Player.Character.HumanoidRootPart.CFrame
                    wait(0.1)
                end
            end
        end
        wait(0.1)
    end
end

local function StartDungeon()
    local hasHumanoidRootPart = false
    for _, v in ipairs(workspace:GetChildren()) do
        if v.ClassName == "Folder" then
            for _, x in ipairs(v:GetChildren()) do
                if x.ClassName == "Folder" then
                    for _, c in ipairs(x:GetChildren()) do
                        if c:IsA("Model") and c:FindFirstChild("HumanoidRootPart") then
                            hasHumanoidRootPart = true
                            break
                        end
                    end
                end
                if hasHumanoidRootPart then
                    break
                end
            end
        end
        if hasHumanoidRootPart then
            break
        end
    end
    if not hasHumanoidRootPart then
        wait(1.5)
        game.ReplicatedStorage.Dungeon.Remotes.StartDungeon:FireServer()
        game.ReplicatedStorage.Dungeon.Remotes.StartWaveDefense:FireServer()
    end
end

local function FindClosestMonster()
    local closestMonsterDist = math.huge
    local closestMonsterPos = nil
    for _, v in ipairs(workspace:GetChildren()) do
        if v.ClassName == "Folder" then
            for _, x in ipairs(v:GetChildren()) do
                if x.ClassName == "Folder" then
                    for _, c in ipairs(x:GetChildren()) do
                        if c:IsA("Model") and c:FindFirstChild("EvilHumanoid") then
                            local EvilHumanoid = c:FindFirstChild("EvilHumanoid")
                            local monsterPos = c:FindFirstChild("HumanoidRootPart").Position

                            if EvilHumanoid and EvilHumanoid.Health > 0 then
                                local distToMonster = (monsterPos - Player.Character.HumanoidRootPart.Position).Magnitude
                                if distToMonster < closestMonsterDist then
                                    closestMonsterDist = distToMonster
                                    closestMonsterPos = monsterPos
                                end
                            end
                        end
                    end
                end
            end
        end
    end

    return closestMonsterPos
end

local function MoveToClosestMonster()
    local closestMonsterPos = FindClosestMonster()
    if closestMonsterPos then
        closestMonsterPos = closestMonsterPos + Vector3.new(-5, 0, 0)
        local distance = (closestMonsterPos - Player.Character.HumanoidRootPart.Position).Magnitude
        local movementSpeed = 70

        local TweenService = game:GetService("TweenService")
        local HumanoidRootPart = Player.Character.HumanoidRootPart

        local duration = distance / movementSpeed

        local tweenInfo = TweenInfo.new(duration, Enum.EasingStyle.Linear)
        local tween = TweenService:Create(HumanoidRootPart, tweenInfo, {CFrame = CFrame.new(closestMonsterPos)})
        tween:Play()
    end
end

local function PerformAttack()
    pcall(function()
        if AutoMobs then
            local Script = require(Player.PlayerScripts.Shared.Client.CombatController)
            local ScriptFunction = Script.BasicAttack
            local ScriptFunction2 = Script.UseAbility
            ScriptFunction(Script)
            ScriptFunction2(Script)
        end
    end)
end

local function FindNewChestInWorkspace(parent)
    for _, child in pairs(parent:GetChildren()) do
        if child:IsA("Folder") and child.Name == "Chests" then
            for _, grandchild in pairs(child:GetChildren()) do
                if grandchild:IsA("Model") and grandchild.Name == "Chest" then
                    local ChestPart = grandchild:FindFirstChild("Hitbox")
                    if ChestPart and not visitedChests[grandchild] then
                        visitedChests[grandchild] = true
                        lastVisitedChest = grandchild
                        return ChestPart
                    end
                end
            end
        end
        local foundPart = FindNewChestInWorkspace(child)
        if foundPart then
            return foundPart
        end
    end

    return nil
end

local function FindFinishPartInWorkspace(workspace)
    local function SearchInChildren(parent)
        for _, child in pairs(parent:GetChildren()) do
            if child:IsA("Model") and child.Name == "FinishRoom" then
                local finishPart = child:FindFirstChild("Hitbox")
                local HitboxPart = finishPart and finishPart:FindFirstChildWhichIsA("BasePart")
                if HitboxPart then
                    return HitboxPart
                end
            end
            local foundPart = SearchInChildren(child)
            if foundPart then
                return foundPart
            end
        end

        return nil
    end

    return SearchInChildren(workspace)
end

local function ToggleAutoMobs(value)
    AutoMobs = value
    if AutoMobs then
        while AutoMobs do
            StartDungeon()
            MoveToClosestMonster()
            PerformAttack()
        end
    end
end

local function ToggleBuyItemCK(value)
    BuyitemCK = value
    if BuyitemCK then
        local selectedAmountCK = 1
        local selectedShopCK = "Aquatic Chest"
        local shopDataCK = {
            ["Aquatic Chest"] = {
                [1] = "AquaticArsenal",
                [2] = "0",
                [3] = selectedAmountCK
            },
            ["Bubble Effect"] = {
                [1] = "AquaticArsenal",
                [2] = "1",
                [3] = selectedAmountCK
            },
            ["Speed Potion"] = {
                [1] = "AquaticArsenal",
                [2] = "2",
                [3] = selectedAmountCK
            },
            ["Ability Potion"] = {
                [1] = "AquaticArsenal",
                [2] = "3",
                [3] = selectedAmountCK
            }
        }

        local args = shopDataCK[selectedShopCK]
        args[3] = selectedAmountCK
        game:GetService("ReplicatedStorage").Lobby.Remotes.ShopPurchase:FireServer(args[1], args[2], args[3])
        wait(0.1)
        game:GetService("ReplicatedStorage").Shared.Remotes.Data.ClaimPrizes:FireServer()
    end
end

local function ToggleBuyItemDD(value)
    BuyitemDD = value
    if BuyitemDD then
        local selectedAmountDD = 1
        local selectedShopDD = "Daring Chest"
        --[[ Add your logic for buying items in the Daring Dojo shop here ]]
    end
end

local function ToggleBuyItemFF(value)
    BuyitemFF = value
    if BuyitemFF then
        local selectedAmountFF = 1
        local selectedShopFF = "Molten Chest"
        local shopDataFF = {
            ["Molten Chest"] = {
                [1] = "MoltenMarket",
                [2] = "0",
                [3] = selectedAmountFF
            },
            ["Embers Effect"] = {
                [1] = "MoltenMarket",
                [2] = "1",
                [3] = selectedAmountFF
            },
            ["Warrior Potion"] = {
                [1] = "MoltenMarket",
                [2] = "2",
                [3] = selectedAmountFF
            },
            ["Wizard Potion"] = {
                [1] = "MoltenMarket",
                [2] = "3",
                [3] = selectedAmountFF
            },
            ["Archer Potion"] = {
                [1] = "MoltenMarket",
                [2] = "4",
                [3] = selectedAmountFF
            },
        }

        local args = shopDataFF[selectedShopFF]
        args[3] = selectedAmountFF
        game:GetService("ReplicatedStorage").Lobby.Remotes.ShopPurchase:FireServer(args[1], args[2], args[3])
        wait(0.1)
        game:GetService("ReplicatedStorage").Shared.Remotes.Data.ClaimPrizes:FireServer()
    end
end

local Window = OrionLib:MakeWindow({Name = "Treasure Quest", HidePremium = false, SaveConfig = false, ConfigFolder = "asdsahgjasdhkgjbdsa"})

local Tab1 = Window:MakeTab({
    Name = "Player",
    Icon = "rbxassetid://12836323838",
    PremiumOnly = false
})

Tab1:AddButton({
    Name = "Speed",
    Callback = SetSpeed
})

Tab1:AddToggle({
    Name = "InfJump",
    Default = false,
    Callback = ToggleInfJump
})

Tab1:AddToggle({
    Name = "Anti AFK",
    Default = false,
    Callback = ToggleAntiAFK
})

local Tab2 = Window:MakeTab({
    Name = "Magic Weapon",
    Icon = "rbxassetid://12836267517",
    PremiumOnly = false
})

Tab2:AddToggle({
    Name = "Collect Medkit",
    Default = false,
    Callback = ToggleCollectMedkits
})

Tab2:AddToggle({
    Name = "Auto Mobs",
    Default = false,
    Callback = ToggleAutoMobs
})

local Tab3 = Window:MakeTab({
    Name = "Warrior and Bow",
    Icon = "rbxassetid://13907030534",
    PremiumOnly = false
})

Tab3:AddToggle({
    Name = "Collect Medkit",
    Default = false,
    Callback = ToggleCollectMedkits
})

Tab3:AddToggle({
    Name = "Auto Mobs",
    Default = false,
    Callback = ToggleAutoMobs
})

local Tab4 = Window:MakeTab({
    Name = "Mystery Shop",
    Icon = "rbxassetid://13907035307",
    PremiumOnly = false
})

local SectionCK = Tab4:AddSection({
    Name = "Coral Kingdom"
})

SectionCK:AddDropdown({
    Name = "Aquatic Shop",
    Default = "Aquatic Chest",
    Options = {"Aquatic Chest", "Bubble Effect", "Speed Potion", "Ability Potion"},
    Callback = function(value)
        selectedShopCK = value
    end
})

SectionCK:AddDropdown({
    Name = "Amount",
    Default = "1",
    Options = {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "15", "20", "25"},
    Callback = function(value)
        selectedAmountCK = tonumber(value) or 1
    end
})

SectionCK:AddToggle({
    Name = "Buy Item",
    Default = false,
    Callback = ToggleBuyItemCK
})

local SectionDD = Tab4:AddSection({
    Name = "Daring Dojo"
})

SectionDD:AddDropdown({
    Name = "Daring Shop",
    Default = "Daring Chest",
    Options = {"Daring Chest", "Stealth Effect", "Jump Potion"},
    Callback = function(value)
        selectedShopDD = value
    end
})

SectionDD:AddDropdown({
    Name = "Amount",
    Default = "1",
    Options = {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "15", "20", "25"},
    Callback = function(value)
        selectedAmountDD = tonumber(value) or 1
    end
})

SectionDD:AddToggle({
    Name = "Buy Item",
    Default = false,
    Callback = ToggleBuyItemDD
})

local SectionFF = Tab4:AddSection({
    Name = "Molten Market"
})

SectionFF:AddDropdown({
    Name = "Molten Shop",
    Default = "Molten Chest",
    Options = {"Molten Chest", "Embers Effect", "Warrior Potion", "Wizard Potion", "Archer Potion"},
    Callback = function(value)
        selectedShopFF = value
    end
})

SectionFF:AddDropdown({
    Name = "Amount",
    Default = "1",
    Options = {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "15", "20", "25"},
    Callback = function(value)
        selectedAmountFF = tonumber(value) or 1
    end
})

SectionFF:AddToggle({
    Name = "Buy Item",
    Default = false,
    Callback = ToggleBuyItemFF
})

Window:Init()
